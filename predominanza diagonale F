program permuta_predominanza
  implicit none
  integer, parameter :: n = 3
  real :: A(n,n), B(n), temp(n), tempB
  integer :: i, j, k, maxriga, somma, predominante

  
    A(1,:)=(/1.0, 2.0, 4.0 /)
    A(2,:)=(/3.0, 0.0, 2.0 /)
    A(3,:)=(/1.0, 4.0, 2.0 /)
  B = [1.0, 5.0, 2.0]
 
  print*, 'Matrice A' 
  do i = 1, n
     print*, A(i,:)
  end do
   
  print*, 'Vettore B' 
  do i = 1, n
     print*, B(i)
  end do



  ! Scambio righe per tentare predominanza
  do i = 1, n
     do j = i, n
        somma = 0
        do k = 1, n
           if (k /= i) somma = somma + abs(A(j,k))
        end do
        if (abs(A(j,i)) >= somma) then
           temp = A(i,:)
           A(i,:) = A(j,:)
           A(j,:) = temp

           tempB = B(i)
           B(i) = B(j)
           B(j) = tempB
           exit
        end if
     end do
  end do

  ! Verifica predominanza
  predominante = 1
  do i = 1, n
     somma = 0
     do j = 1, n
        if (i /= j) somma = somma + abs(A(i,j))
     end do
     if (abs(A(i,i)) < somma) predominante = 0
  end do

  if (predominante == 1) then
     print*, 'Matrice a predominanza diagonale:'
  else
     print*, 'Predominanza diagonale non raggiunta.'
  end if

  do i = 1, n
     print*, A(i,:)
  end do

end program
